name: Release

on:
  push:
    # branches:
    #   - master
    #   - 1.x
    paths:
      - '.github/workflows/release.yml'
jobs:
  release-on-push:
    runs-on: 'ubuntu-latest'
    #if: contains(github.event.pull_request.labels.*.name, 'release:minor')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve last tag on branch
        run: |
          echo "::set-output name=TAG_NAME::$(git describe --tags --abbrev=0 | cut -c 2-)"
        id: last_tag

      - uses: jungwinter/split@v2
        id: split
        with:
          msg: '${{ steps.last_tag.outputs.TAG_NAME }}'
          separator: '.'
          maxsplit: 3

      - name: Create Release
        id: create_release
        run: |
          echo major ${{ steps.split.outputs._0 }}
          echo minor ${{ steps.split.outputs._1 }}
          echo patch ${{ steps.split.outputs._2 }}

      # uses: actions/create-release@v1
      # env:
      #   GITHUB_TOKEN: ${{ secrets.token }}
      # with:
      #   tag_name: ${{ steps.version.outputs.TAG_NAME }}
    #  - name: Create Release Notes File
    #    env:
    #     COMMITTEXT: "${{ github.event.head_commit.message }}"
    #    run: |
    #       php create-release-notes-file.php
    #  - name: Set Tag Output
    #    id: set-tag
    #    run:  echo "::set-output name=tag_name::$(sh get-version.sh)"
    #  - name: Create Tag
    #    uses: actions/github-script@v3
    #    env:
    #       TAG: ${{ steps.set-tag.outputs.tag_name }}
    #    with:
    #       github-token: ${{ github.token }}
    #       script: |
    #         github.git.createRef({
    #           owner: context.repo.owner,
    #           repo: context.repo.repo,
    #          ref: "refs/tags/${{ steps.set-tag.outputs.tag_name }}",
    #           sha: context.sha
    #         })
    #  - name: Create release
    #    uses: ncipollo/release-action@v1
    #    with:
    #     tag: ${{ steps.set-tag.outputs.tag_name }}
    #     bodyFile: './release_notes.txt'
    #     token: ${{ secrets.GITHUB_TOKEN }}
    # runs-on: ubuntu-latest
    # env:
    #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    # steps:
    #   - id: release
    #     uses: rymndhng/release-on-push-action@master
    #     with:
    #       tag_prefix: v
    #       use_github_release_notes: true
    #       bump_version_scheme: norelease

    #   - name: Check Output Parameters
    #     run: |
    #       echo "Got tag name ${{ steps.release.outputs.tag_name }}"
    #       echo "Got release version ${{ steps.release.outputs.version }}"
