name: Release

on:
  push:
    # branches:
    #   - master
    #   - 1.x
    paths:
      - '.github/workflows/release.yml'
jobs:
  release-on-push:
    runs-on: 'ubuntu-latest'
    #if: ${{ (needs.rules.outputs.branch_name != 'production') && (needs.rules.outputs.branch_name != 'staging') }}
    #if: contains(github.event.pull_request.labels.*.name, 'release:minor')
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Retrieve last tag on branch
        run: |
          echo "::set-output name=TAG_NAME::$(git describe --tags --abbrev=0 | cut -c 2-)"
        id: last_tag

      - uses: jungwinter/split@v2
        id: split
        with:
          msg: '${{ steps.last_tag.outputs.TAG_NAME }}'
          separator: '.'
          maxsplit: 3

      - name: Calculate new versions
        env:
          MAJOR: ${{ steps.split.outputs._0 }}
          MINOR: ${{ steps.split.outputs._1 }}
          PATCH: ${{ steps.split.outputs._2 }}
        run: |
          echo "::set-output name=NEW_MAJOR::$(echo $((MAJOR+1)).0.0)"
          echo "::set-output name=NEW_MINOR::$(echo $MAJOR.$((MINOR+1)).0)"
          echo "::set-output name=NEW_PATCH::$(echo $MAJOR.$MINOR.$((PATCH+1)))"
        id: versions

      - name: New major release
        if: contains(github.event.head_commit.message, 'major')
        run: |
          echo new major ${{ steps.versions.outputs.NEW_MAJOR }}

      - name: New minor release
        if: contains(github.event.head_commit.message, 'minor')
        run: |
          echo new minor ${{ steps.versions.outputs.NEW_MINOR }}

      - name: New patch release
        if: contains(github.event.head_commit.message, 'patch')
        run: |
          echo new patch ${{ steps.versions.outputs.NEW_PATCH }}

      - name: Extract branch name
        shell: bash
        run: echo "::set-output name=BRANCH::$(echo ${GITHUB_REF#refs/heads/})"
        id: branch

      - name: Exit on bad tag
        if: ${{ (contains(github.event.head_commit.message, 'major')) && !(contains(steps.branch.outputs.BRANCH != 'master') }}
        run: |
          echo Can't create a major release on branch ${{ steps.branch.outputs.BRANCH }}
          exit 1

    #  - name: Create major release
    #    if: contains(github.event.head_commit.message, 'major')
    #    uses: ncipollo/release-action@v1
    #    with:
    #     tag: ${{ steps.versions.outputs.NEW_MAJOR }}
    #     commit: ${{ steps.branch.outputs.BRANCH }}
    #     generateReleaseNotes: true

    #  - name: Create minor release
    #    if: contains(github.event.head_commit.message, 'minor')
    #    uses: ncipollo/release-action@v1
    #    with:
    #     tag: ${{ steps.versions.outputs.NEW_MINOR }}
    #     commit: ${{ steps.branch.outputs.BRANCH }}
    #     generateReleaseNotes: true

    #  - name: Create patch release
    #    if: contains(github.event.head_commit.message, 'patch')
    #    uses: ncipollo/release-action@v1
    #    with:
    #     tag: ${{ steps.versions.outputs.NEW_PATCH }}
    #     commit: ${{ steps.branch.outputs.BRANCH }}
    #     generateReleaseNotes: true
